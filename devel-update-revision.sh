#!/bin/bash

arg_metod=$1

# load current kernel version
# and other data that might be useful (the old data before we will overwrite it)

. kernel-build/linux-mempo/env-data.sh
kernel_ver="$kernel_general_version"
# TODO assert correct format

if [[ -z "$arg_metod" ]] ; then arg_metod="increase" ; fi

echo "### Preparing new env"
url_provable_entropy="http://mempo.org/random/blockchain/default/get/"
echo "Getting provable entropy from $url_provable_entropy"
entropy_data=$( wget -q "$url_provable_entropy" --output-document - ) 
entropy_seed=$( printf '%s\n' "$entropy_data" | head -n 1 | tail -n 1 )
entropy_index=$( printf '%s\n' "$entropy_data" | head -n 2 | tail -n 1 )
entropy_name=$( printf '%s\n' "$entropy_data" | head -n 3 | tail -n 1 )
echo "Got entropy seed from $entropy_name index $entropy_index:"
echo "$entropy_seed"

newenv_date=$(date +'%Y-%m-%d %H:%M:%S')

case $arg_metod in
"restart")
		newenv_rev='01'
  ;;
"increase")
	echo "Increase revision, please enter revision like 02:" # TODO auto
	read newenv_rev
	;;
*)
	echo "Error, method $arg_metod" ; exit 2
  ;;
esac

f_oldenv="kernel-build/linux-mempo/env-data.sh" # this will be updated
f_newenv_dir="var.update" # temp dir
mkdir -p "$f_newenv_dir"

f_newenv="$f_newenv_dir/env-data.sh"

printf '' > $f_newenv
printf '%s\n' "# place for STATIC settings for release. [autogenerated] ${commit_msg_extra1}" >> $f_newenv
printf '%s\n' "export kernel_general_version=\"$kernel_ver\" # base version (should match the one is sources.list)" >> $f_newenv
printf '%s\n' "export KERNEL_DATE='$newenv_date' # UTC time of mempo version. This is > then max(kernel,grsec,patches) times" >> $f_newenv
printf '%s\n' "export CURRENT_SEED='$entropy_seed' # $entropy_name block $entropy_index (*)" >> $f_newenv
printf '%s\n' "export DEBIAN_REVISION='$newenv_rev' # see README.md how to update it on git tag, on rc and final releases" >> $f_newenv

cp "$f_newenv" "$f_oldenv"
echo "New env is:"
cat "$f_oldenv"
echo ""
